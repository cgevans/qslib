[package]
name = "qslib"
version = "0.14.0-rc4"
edition = "2021"
description = "QSlib QuantStudio qPCR machine library"
license = "EUPL-1.2"
authors = ["Constantine Evans <qslib@mb.costi.net>"]
homepage = "https://github.com/cgevans/qslib-rs"
repository = "https://github.com/cgevans/qslib-rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "qslib"
crate-type = ["cdylib", "rlib"]

[dependencies]
dashmap = "6.1"
enum_dispatch = "0.3.13"
futures = "0.3.31"
indexmap = "2.7.1"
log = "0.4.25"
pyo3 = { version = "0.23.3", optional = true, features = ["extension-module", "abi3-py310", "anyhow", "multiple-pymethods"] }
quick-xml = { version = "0.37.2", features = ["overlapped-lists", "serialize"] }
regex = "1.11.1"
rustls = { version = "0.23.20", features = ["ring"], default-features = false }
rustls-pki-types = "1.10.1"
serde = { version = "1.0.217", features = ["derive"] }
thiserror = "2.0.9"
tokio = { version = "1.42.0", features = ["net", "sync", "rt", "rt-multi-thread", "io-util", "macros"] }
tokio-rustls = { version = "0.26.1", features = ["ring", "logging", "tls12"], default-features = false }
tokio-stream = { version = "0.1.17", features = ["sync"] }
uuid = { version = "1.12.1", features = ["v4"] }
winnow = "0.6.22"
zip = "2.2.2"
memchr = { version = "2.7", optional = true }
lazy_static = "1.5.0"
data-encoding = "2.7.0"
anyhow = "1.0.95"
bstr = "1.11.3"
tracing = "0.1.41"
polars = { version = "0.46.0", features = ["lazy"] }
pyo3-polars = { version = "0.20.0", optional = true }

[features]
debug = ["winnow/debug"]
python = ["pyo3", "pyo3-polars"]
simd = ["dep:memchr", "winnow/simd"]
# default = ["python"]

[dev-dependencies]
env_logger = "0.11.6"
rcgen = "0.13.2"
rustls-pemfile = "2.2.0"
criterion = { version = "0.5", features = ["html_reports"] }
base64 = "0.21"
# default = ["python"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage,coverage_nightly)'] }

[[bench]]
name = "msg_recv"
harness = false

[[bench]]
name = "message_parsing"
harness = false

# [lints.rust]
# unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage,coverage_nightly)'] }

# [[bench]]
# name = "msg_recv"
# harness = false

# [[bench]]
# name = "message_parsing"
# harness = false
